[{"C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\store.js":"3","C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\actions\\types.js":"4","C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\components\\todos.js":"5","C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\components\\Todos.js":"6","C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\components\\TodoItem.js":"7","C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\actions\\todoActions.js":"8","C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\components\\TodoForm.js":"9","C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\components\\Spinner.js":"10","C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\reducers\\todoReducer.js":"11","C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\components\\EditTodo.js":"12"},{"size":199,"mtime":1609608526456,"results":"13","hashOfConfig":"14"},{"size":618,"mtime":1609788510445,"results":"15","hashOfConfig":"14"},{"size":391,"mtime":1609709270581,"results":"16","hashOfConfig":"14"},{"size":168,"mtime":1609782092742,"results":"17","hashOfConfig":"14"},{"size":803,"mtime":1609668925697,"results":"18","hashOfConfig":"14"},{"size":928,"mtime":1609789637200,"results":"19","hashOfConfig":"14"},{"size":1052,"mtime":1609792023599,"results":"20","hashOfConfig":"14"},{"size":2465,"mtime":1609787393796,"results":"21","hashOfConfig":"14"},{"size":1546,"mtime":1609792270603,"results":"22","hashOfConfig":"14"},{"size":274,"mtime":1609686356221,"results":"23","hashOfConfig":"14"},{"size":1268,"mtime":1609787433260,"results":"24","hashOfConfig":"14"},{"size":1539,"mtime":1609790895869,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"vd84xp",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\index.js",[],["56","57"],"C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\App.js",[],"C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\store.js",[],"C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\actions\\types.js",[],"C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\components\\todos.js",[],"C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\components\\Todos.js",[],"C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\components\\TodoItem.js",[],["58","59"],"C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\actions\\todoActions.js",["60","61"],"import axios from 'axios';\r\nimport {  GET_TASKS ,TASK_ERROR, REMOVE_TASK, ADD_TASK,UPDATE_TASK} from \"./types\";\r\n\r\n//get todos\r\nexport const getTodos = ()  =>  async dispatch  => {\r\n    try{\r\n    \r\n        const res = await axios.get('/api/todo');\r\n        dispatch({\r\n            type: GET_TASKS,\r\n     \r\n            payload: res.data\r\n        });\r\n        console.log(JSON.stringify(res.data))\r\n\r\n    } catch(err){\r\n        dispatch({\r\n            type: TASK_ERROR,\r\n             payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n\r\n    }\r\n    console.log('hgggi/todo');\r\n}\r\n\r\n\r\n// DELETE Todo\r\nexport const deleteTodo = id => async dispatch => {\r\n\r\n    try{\r\n         await axios.delete(`/api/todo/${id}`);\r\n\r\n        dispatch({\r\n            type:  REMOVE_TASK,\r\n            payload: id\r\n\r\n        });\r\n    } \r\n    catch (err) {\r\n\r\n        dispatch({\r\n            type: TASK_ERROR,\r\n             payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// ADD Todo\r\nexport const addTodo = formData => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    \r\n        try{\r\n            const res = await axios.post('/api/todo', formData, config);\r\n    \r\n            dispatch({\r\n                type: ADD_TASK,\r\n                payload: res.data\r\n    \r\n            });\r\n    \r\n           \r\n        } \r\n        catch (err) {\r\n    \r\n            dispatch({\r\n                type: TASK_ERROR,\r\n                 payload: { msg: err.response.statusText, status: err.response.status }\r\n            });\r\n        }\r\n    };\r\n\r\n    // UPDATE TODO\r\n    \r\n    {/*export const updateTodo = (id, payload) => async dispatch => {\r\n\r\n        try{\r\n            const res = await axios.put(`/api/todo/${id}`, payload);\r\n\r\n            dispatch({\r\n                type: UPDATE_TASK,\r\n                payload: { id, payload: res.data}\r\n    \r\n            });\r\n        } \r\n        catch (err) {\r\n    \r\n            dispatch({\r\n                type: TASK_ERROR,\r\n                 payload: { msg: err.response.statusText, status: err.response.status }\r\n            });\r\n        }\r\n    };*/}\r\n\r\n    export const updateTodo = (id, payload) => async dispatch => {\r\n        try {\r\n          await axios.put(`/api/todo/${id}`, payload);\r\n          dispatch(getTodos());\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };",["62","63"],"C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\components\\TodoForm.js",[],"C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\components\\Spinner.js",["64"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n   <Fragment>\r\n       <img src={spinner}\r\n       style={{ width: '200px', margin: 'auto', display: 'block'}}\r\n       alt='loading...'\r\n       />\r\n   </Fragment>\r\n\r\n);\r\n","C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\reducers\\todoReducer.js",["65","66","67"],"import {  GET_TASKS ,TASK_ERROR, REMOVE_TASK, ADD_TASK,UPDATE_TASK} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  todos: [{title:'test', description: 'test'}],\r\n  loading: true,\r\n  error: {}\r\n \r\n}\r\n  export const todoReducer = (state = initialState, action)  => {\r\n    const {type, payload} = action;\r\n    switch(type){\r\n      case GET_TASKS:\r\n        return{\r\n          ...state,\r\n          todos: payload,\r\n          loading: false\r\n         \r\n\r\n        }\r\n       case REMOVE_TASK:\r\n        return{\r\n          ...state,\r\n          todos: state.todos.filter( todo => todo._id !== payload),\r\n          loading: false\r\n        }\r\n        case ADD_TASK: \r\n        return {\r\n            ...state,\r\n            todos: [payload, ...state.todos],\r\n            loading: false,\r\n          }\r\n          {/*case UPDATE_TASK:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(todo => todo._id === payload.id ? { ...todo, todos:\r\n                     payload.todos} : todo),\r\n                     loading: false\r\n            }*/}\r\n\r\n        case TASK_ERROR:\r\n          return{\r\n            ...state,\r\n            error: payload,\r\n            loading: false\r\n          };\r\n          default:\r\n            return state;\r\n    }\r\n }\r\n\r\n ","C:\\Users\\DELL\\Desktop\\TODO-LIST\\client\\src\\components\\EditTodo.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"68","replacedBy":"72"},{"ruleId":"70","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":56,"nodeType":"76","messageId":"77","endLine":2,"endColumn":67},{"ruleId":"78","severity":1,"message":"79","line":78,"column":5,"nodeType":"80","messageId":"81","endLine":96,"endColumn":10},{"ruleId":"68","replacedBy":"82"},{"ruleId":"70","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":4,"column":1,"nodeType":"86","endLine":12,"endColumn":3},{"ruleId":"74","severity":1,"message":"75","line":1,"column":56,"nodeType":"76","messageId":"77","endLine":1,"endColumn":67},{"ruleId":"78","severity":1,"message":"79","line":32,"column":11,"nodeType":"80","messageId":"81","endLine":38,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":32,"column":11,"nodeType":"80","messageId":"89","endLine":38,"endColumn":17},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],"no-unused-vars","'UPDATE_TASK' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["90"],["91"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unreachable","Unreachable code.","unreachableCode","no-global-assign","no-unsafe-negation"]